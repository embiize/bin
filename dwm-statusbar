#!/bin/bash
#
# ~/bin/dwm-statusbar
#
# Status bar for dwm. Expanded from:
# https://bitbucket.org/jasonwryan/eeepc/src/73dadb289dead8ef17ef29a9315ba8f1706927cb/Scripts/dwm-status

print_song_info() {
  song_info="$(ncmpcpp --now-playing '{{{{%a \uE01B }%t}}|{%f}}' | head -c 75)"
  if [[ ! $song_info ]]; then
    song_info="Off"
  fi
  echo -ne "\x04\uE01A\x0D \uE00E ${song_info} "
}

print_torrent_status() {
  torrent_status="$(transmission-remote -l | awk -F "  +" '$5 ~ /^[0-9]/ {print $5}')"
  if [[ ! $torrent_status ]]; then
    torrent_status="Idle"
  fi
  echo -ne "\x05\uE01A\x0C \uE017 ${torrent_status} "
}

print_email_unread() {
  echo -ne "\x04\uE01A\x0B \uE014"
  for maildir in $(find $HOME/.mutt/maildir/*/inbox/new -type d); do
    unread_count="$(ls "${maildir}" | wc -l)"
    echo -ne " ${unread_count}"
  done
  echo -n " "
}

print_last_msg() {
  last_msg="$(cat $HOME/.logs/irssi_pipe)"
  echo -ne "\x05\uE01A\x0A \uE013 ${last_msg} "
}

print_mem_used() {
  mem_used="$(free -m | awk 'NR==3 {print $3}')"
  echo -ne "\uE01B \uE010 ${mem_used}M "
}

print_volume() {
  volume="$(amixer get PCM | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
  echo -ne "\x04\uE01A\x06 \uE015 ${volume}% "
}

print_datetime() {
  datetime="$(date "+%a %d %b \uE01B %H:%M")"
  echo -ne "\x05\uE01A\x02 \uE016 ${datetime} "
}

# network (from: http://dzen.geekmode.org/dwiki/doku.php?id=dzen:network-meter)
# cpu (from: https://bbs.archlinux.org/viewtopic.php?pid=661641#p661641)
rx_old=$(cat /sys/class/net/eth0/statistics/rx_bytes)
tx_old=$(cat /sys/class/net/eth0/statistics/tx_bytes)

while true; do
  # get new cpu idle and total usage
  eval $(awk '/^cpu /{print "cpu_idle_now=" $5 "; cpu_total_now=" $2+$3+$4+$5 }' /proc/stat)
  cpu_interval=$((cpu_total_now-${cpu_total_old:-0}))
  # calculate cpu usage (%)
  let cpu_used="100 * ($cpu_interval - ($cpu_idle_now-${cpu_idle_old:-0})) / $cpu_interval"

  # get new rx/tx counts
  rx_now=$(cat /sys/class/net/eth0/statistics/rx_bytes)
  tx_now=$(cat /sys/class/net/eth0/statistics/tx_bytes)
  # calculate the rate (K) and total (M)
  let rx_rate=($rx_now-$rx_old)/1024
  let tx_rate=($tx_now-$tx_old)/1024
  #  let rx_total=$rx_now/1048576
  #  let tx_total=$tx_now/1048576

  # output vars
  print_cpu_used() { printf "%-14b" "\x04\uE01A\x09 \uE00F ${cpu_used}%"; }
  print_rx_rate() { printf "%-15b" "\x05\uE01A\x08 \uE011 ${rx_rate}K"; }
  print_tx_rate() { printf "%-14b" "\x01\uE01B \x07\uE012 ${tx_rate}K"; }

  # Pipe to status bar, not indented due to printing extra spaces/tabs
  xsetroot -name "$(print_song_info)\
$(print_torrent_status)\
$(print_email_unread)\
$(print_last_msg)\
$(print_cpu_used)$(print_mem_used)\
$(print_rx_rate)$(print_tx_rate)\
$(print_volume)\
$(print_datetime)"

  # reset old rates
  rx_old=$rx_now
  tx_old=$tx_now
  cpu_idle_old=$cpu_idle_now
  cpu_total_old=$cpu_total_now
  # loop stats every 1 second
  sleep 1
done
